variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  
cache:
  paths:
  - .m2/repository

stages:
- build
- test
- package
- deploy

.maven-project: &maven-project-setup

  tags:
  #- maven
   - magicrp1
  image: maven:3.5.2-jdk-8-alpine


.validate: &validate
  
  stage: build
 
  script:
  - echo $CI_COMMIT_TAG
  - 'mvn --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true test-compile'


.verify: &verify
  stage: test
  script:
  - echo "Testing project with maven"
  - 'mvn --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true verify'

.maven-package: &maven-package
  stage: package
  script:
  - echo "Packaging project into jar"
  - 'mvn --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true package' 
  artifacts:
    paths:
    - target/*.jar


maven-build:
  <<: *maven-project-setup
  <<: *validate
  

maven-test:
  <<: *maven-project-setup
  <<: *verify

maven-package:
  <<: *maven-project-setup
  <<: *maven-package
  
docker-build:
  image: docker:latest
  services:
  - docker:dind
  stage: deploy
  tags:
  #- maven
  - magicrp1
  script:
  - echo "Building"
  
  - docker build -t helloworldxu1 .
  - docker tag helloworldxu1 registry.paas.workslan/helloworldxu/helloworldxu1:0.0.6
  - docker login -u xu_xi -p  registry.paas.workslan
  - docker push registry.paas.workslan/helloworldxu/helloworldxu1:0.0.6
  - yosolo login --username xu_xi --password 

  #- yosolo app create helloworldxu1      
  #only first time
  #- yosolo deploy create -a=helloworldxu1 -e=sh-stm --image=registry.paas.workslan/helloworldxu/helloworldxu1 --requests-memory=1Gi
  - yosolo deploy update -a=helloworldxu1 -e=sh-stm --image=registry.paas.workslan/helloworldxu/helloworldxu1:0.0.6 --requests-memory=1Gi